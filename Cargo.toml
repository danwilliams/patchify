[package]
name          = "patchify"
version       = "0.2.1"
description   = "Support for running applications to automatically update themselves"
categories    = ["config", "filesystem"]
keywords      = ["auto-update", "library", "updater"]
edition       = "2024"
rust-version  = "1.86.0"
license       = "MIT"
authors       = ["Dan Williams <dan@dotfive.co.uk>"]
documentation = "https://docs.rs/patchify"
repository    = "https://github.com/danwilliams/patchify"
readme        = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.release]
strip     = true   # Automatically strip symbols from the binary
opt-level = 3      # Maximum optimisation (this is the cargo default)
lto       = "thin" # Enable link-time optimisation (fast)

#==============================[  DEPENDENCIES  ]===============================

[dependencies]
axum               = "0.8.4"
ed25519-dalek      = { version = "2.1.1", features = ["rand_core"] }
flume              = { version = "0.11.1", features = ["async"] }
futures-util       = "0.3.31"
hex                = "0.4.3"
parking_lot        = "0.12.4"
reqwest            = { version = "0.12.19", features = ["stream"] }
rubedo             = "0.6.4"
semver             = { version = "1.0.26", features = ["serde"] }
serde              = { version = "1.0.219", features = ["derive"] }
serde_json         = { version = "1.0.140", features = ["preserve_order"] }
sha2               = "0.10.9"
tempfile           = "3.20.0"
thiserror          = "2.0.12"
tokio              = { version = "1.45.1", features = ["fs", "io-std", "io-util", "macros", "rt-multi-thread"] }
tokio-util         = { version = "0.7.15", features = ["io", "io-util"] }
tracing            = "0.1.41"

[dev-dependencies]
assert-json-diff   = "2.0.2"
bytes              = "1.10.1"
claims             = "0.8.0"
figment            = { version = "0.10.19", features = ["toml", "env"] }
mockall            = "0.13.1"
rand               = "0.8.5"
sham               = { version = "0.2.1", features = ["reqwest", "std_process"] }
smart-default      = "0.7.1"
test-binary        = "3.0.2"
tokio              = { version = "1.45.1", features = ["signal"] }
tower-http         = { version = "0.6.6", features = ["trace"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
velcro             = "0.5.4"
wiremock           = "0.6.3"

#=================================[  LINTS  ]===================================

#	For an explanation of the following configuration, see:
#	https://github.com/danwilliams/standards-rs#code-linting

[lints.rust]
#	Future compatibility lints
future_incompatible                  = { level = "deny", priority = -1 }
#	Deprecated approach lints
rust_2018_compatibility              = { level = "deny", priority = -1 }
rust_2018_idioms                     = { level = "warn", priority = -1 }
rust_2021_compatibility              = { level = "deny", priority = -1 }
rust_2024_compatibility              = { level = "deny", priority = -1 }
#	Unused code lints
unused                               = { level = "warn", priority = -1 }
#	Cherry-picked lints
##	Forbid
unsafe_code                          = "forbid"
unsafe_op_in_unsafe_fn               = "forbid"
##	Deny
deprecated                           = "deny"
deprecated_where_clause_location     = "deny"
incomplete_features                  = "deny"
internal_features                    = "deny"
macro_use_extern_crate               = "deny"
unknown_lints                        = "deny"
unnameable_test_items                = "deny"
unreachable_pub                      = "deny"
##	Warn
let_underscore_drop                  = "warn"
meta_variable_misuse                 = "warn"
missing_copy_implementations         = "warn"
missing_debug_implementations        = "warn"
missing_docs                         = "warn"
single_use_lifetimes                 = "warn"
trivial_casts                        = "warn"
trivial_numeric_casts                = "warn"
unused_crate_dependencies            = "warn"
unused_import_braces                 = "warn"
unused_lifetimes                     = "warn"
unused_qualifications                = "warn"
unused_results                       = "warn"
variant_size_differences             = "warn"

[lints.clippy]
#	Clippy lint categories
cargo                                = { level = "warn", priority = -1 }
nursery                              = { level = "warn", priority = -1 }
pedantic                             = { level = "warn", priority = -1 }
#	Clippy cargo lints
negative_feature_names               = "deny"
wildcard_dependencies                = "deny"
#	Clippy pedantic lints
format_push_string                   = "deny"
pub_underscore_fields                = "deny"
#	Clippy perf lints
regex_creation_in_loops              = "deny"
#	Clippy restriction lints
##	Forbid
allow_attributes_without_reason      = "forbid"
dbg_macro                            = "forbid"
exit                                 = "forbid"
infinite_loop                        = "forbid"
missing_docs_in_private_items        = "forbid"
multiple_inherent_impl               = "forbid"
panic_in_result_fn                   = "forbid"
str_to_string                        = "forbid"
string_to_string                     = "forbid"
unimplemented                        = "forbid"
##	Deny
clone_on_ref_ptr                     = "deny"
doc_include_without_cfg              = "deny"
empty_enum_variants_with_brackets    = "deny"
empty_structs_with_brackets          = "deny"
error_impl_error                     = "deny"
exhaustive_enums                     = "deny"
exhaustive_structs                   = "deny"
expect_used                          = "deny"
float_cmp_const                      = "deny"
fn_to_numeric_cast_any               = "deny"
get_unwrap                           = "deny"
impl_trait_in_params                 = "deny"
integer_division                     = "deny"
lossy_float_literal                  = "deny"
mem_forget                           = "deny"
missing_assert_message               = "deny"
mod_module_files                     = "deny"
mutex_atomic                         = "deny"
mutex_integer                        = "deny"
non_zero_suggestions                 = "deny"
panic                                = "deny"
print_stderr                         = "deny"
print_stdout                         = "deny"
rc_mutex                             = "deny"
renamed_function_params              = "deny"
tests_outside_test_module            = "deny"
try_err                              = "deny"
unwrap_in_result                     = "deny"
unwrap_used                          = "deny"
wildcard_enum_match_arm              = "deny"
##	Warn
absolute_paths                       = "warn"
allow_attributes                     = "warn"
arithmetic_side_effects              = "warn"
as_pointer_underscore                = "warn"
as_underscore                        = "warn"
decimal_literal_representation       = "warn"
default_numeric_fallback             = "warn"
deref_by_slicing                     = "warn"
empty_drop                           = "warn"
field_scoped_visibility_modifiers    = "warn"
filetype_is_file                     = "warn"
if_then_some_else_none               = "warn"
indexing_slicing                     = "warn"
iter_over_hash_type                  = "warn"
let_underscore_must_use              = "warn"
let_underscore_untyped               = "warn"
map_err_ignore                       = "warn"
map_with_unused_argument_over_ranges = "warn"
missing_asserts_for_indexing         = "warn"
mixed_read_write_in_expression       = "warn"
pathbuf_init_then_push               = "warn"
pattern_type_mismatch                = "warn"
precedence_bits                      = "warn"
pub_without_shorthand                = "warn"
rc_buffer                            = "warn"
redundant_type_annotations           = "warn"
rest_pat_in_fully_bound_structs      = "warn"
return_and_then                      = "warn"
same_name_method                     = "warn"
semicolon_inside_block               = "warn"
shadow_reuse                         = "warn"
shadow_same                          = "warn"
shadow_unrelated                     = "warn"
std_instead_of_core                  = "warn"
string_lit_chars_any                 = "warn"
string_slice                         = "warn"
suspicious_xor_used_as_pow           = "warn"
todo                                 = "warn"
unnecessary_safety_comment           = "warn"
unnecessary_safety_doc               = "warn"
unneeded_field_pattern               = "warn"
unreachable                          = "warn"
unseparated_literal_suffix           = "warn"
unused_result_ok                     = "warn"
unused_trait_names                   = "warn"
use_debug                            = "warn"
verbose_file_reads                   = "warn"
#	Clippy suspicious lints
const_is_empty                       = "deny"
deprecated_clippy_cfg_attr           = "deny"
incompatible_msrv                    = "deny"
multiple_bound_locations             = "deny"
unconditional_recursion              = "deny"
unnecessary_clippy_cfg               = "deny"
zombie_processes                     = "deny"
#	Clippy style lints
doc_overindented_list_items          = "allow"
